name: code-analizer-logs


on:
  push:
    branches: [ main, develop ]

 
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: logs-vaivoa-turma1  
  AZURE_FUNCTIONAPP_PACKAGE_PATH: src/LogsVaivoa    
  DOTNET_VERSION: '3.x'   



jobs:
  test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK 3.1
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '3.x'
      - name: Install dependencies
        shell: pwsh
        run: dotnet restore
      - name: Build
        shell: pwsh
        run: dotnet build --configuration Release --no-restore
      - name: Test
        shell: pwsh
        run: dotnet test --no-restore --verbosity normal
  horusec-security:
      name: horusec-security
      runs-on: ubuntu-latest
      steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Running Horusec Security
        run: |
          curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest
          horusec start -p="./src/" -e="true"   
  sonarqube-analizer:
    needs: [horusec-security]
    runs-on: windows-latest
    environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Setup sonarqube 
      shell: pwsh
      run: |
        dotnet tool install --global dotnet-sonarscanner
    - name: Run Sonarqube scanner
      shell: pwsh
      run: |
        cd "./src/LogsVaivoa"
        dotnet sonarscanner begin /k:"Logs" /d:sonar.host.url=${{secrets.SONAR_HOST}} /d:sonar.qualitygate.wait=true /d:sonar.login=${{secrets.SONAR_TOKEN}}
        dotnet build
        dotnet sonarscanner end /d:sonar.login=${{secrets.SONAR_TOKEN}}
